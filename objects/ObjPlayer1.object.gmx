<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>-1</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Instance varÂ´s

Teclado = true;

Name = "";
Player = 1;

yMin = 248;
yMax = 448;

Z = y - yMin;
Y = 0;

Jump = false;

MaxJumpForce = 30;
Gravity = 5;

LastY = y + sprite_height/2;

R = 1;
ZInitial = Z - R;
ZFinal = Z + R;

// Animations
Animations[3] = 0;
// Book
Book = 0 ;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Move

if(!Jump)
{
    Z = y - yMin ;
}
if(Teclado)
{
    Up = keyboard_check(ord("W"));
    Down = keyboard_check(ord("S"));
    Left = keyboard_check(ord("A"));
    Right = keyboard_check(ord("D"));
}
// x
if(Right - Left != 0)
{
    if(Right)
    {
        image_xscale = 1;
    }
    else if (Left)
    {
        image_xscale = -1;
    }
    if(!Jump)
    {
        sprite_index = Animations[1];
    }   
}
else if(!Jump and 
(!Up and !Down))
{ 
    sprite_index = Animations[0];
}
if x&gt;(view_xview[0]+32) 
{
x += -Left * 7;
}

if x&lt;(view_xview[0]+567)
{
x += Right*7;
}

// y 
if(Up and Z &gt; 0 and !Down )
{ 
    if(Jump)
    {
        Z -= 5;
    }
    y -= 5;
    if(!Jump and Z &gt; 0)
    {
        sprite_index = Animations[1]
    }
}
if(Down and Z &lt; 150 and !Up)
{   
    if(Jump)
    {
        Z += 5;
    }
    y += 5;
     if(!Jump and Z &lt; 150)
    {
        sprite_index = Animations[1]
    }  
}
if((Up and Down) and (Right - Left == 0) and  !Jump )
{
    sprite_index = Animations[0]
}

// Depth
depth=-Z 


</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Jump
if(Teclado)
{
    Space = keyboard_check_pressed(vk_space);
}

if(vspeed == MaxJumpForce)
{
    vspeed = 0;
    Jump = false;
    sprite_index = Animations[0];   
}

if(Jump)
{
    if(y + sprite_height/2 &lt; LastY)
    {
    // Up
        Y ++;
    }
    else if(y + sprite_height/2 &gt; LastY)
    {
    // Down
        Y --;      
    }   
    vspeed += Gravity;
    LastY = y + sprite_height/2; 
}
if(Space and !Jump)
{
    vspeed -= MaxJumpForce;
    Jump = true; 
    sprite_index = Animations[2];
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
